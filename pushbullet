#! /bin/bash

# Bash interface to the PushBullet api.

# Original Author: Red5d - https://github.com/Red5d
# Author: Sean Payne - https://github.com/zerodivide1

if [[ -z "$CONFIG" ]]
then
	CONFIG=${XDG_CONFIG_HOME:-$HOME/.config}/pushbullet
fi

API_URL=https://api.pushbullet.com/api

source $CONFIG

printUsage() {
echo "Usage: pushbullet <action> <device> <type> <data>

Actions: 
list - Lists all devices in your PushBullet account. (does not require additional parameters)
push - Pushes data to a device. (the device name can simply be a unique part of the name that "list" returns)

Types: 
note
address
list
file
link

Type Parameters: 
(all parameters must be put inside quotes if more than one word)
\"note\" type: 	give the title, then the note text.
\"address\" type: give the address name, then the address or Google Maps query.
\"list\" type: 	give the name of the list, then each of the list items, separated by spaces.
\"file\" type: 	give the path to the file.
\"link\" type: 	give the title of the link, then the url.
"
}


if [ "$1" = "" ];then

if [ "$API_KEY" = "" ];then
echo -e "\e[0;33mWarning, your API key is not set.\nPlease create $CONFIG with a line starting with API_KEY= and your PushBullet key\e[00m"
fi

printUsage
exit
fi

dopush() {
	device_id="$1"
	shift
	push_type="$1"
	shift
	args=()
	while [ "$1" ]
	do
		arg_name="$1"
		shift
		arg_value="$1"
		shift
		
		args+=(-d "$arg_name"="$arg_value")
	done
	curl_result=$( curl -qSfsw '\n%{http_code}' "$API_URL/pushes" -u $API_KEY: -X POST -d device_id=$device_id -d type=$push_type "${args[@]}" ) 2>/dev/null
	curl_result_code=$(echo "$curl_result" | tail -n1)
	curl_result_body=$(echo "$curl_result" | head -n-1)
	case "$curl_result_code" in
		"200")
			push_id=$(echo "$curl_result_body" | json id)
			echo "OK $push_id"
			;;
		*)
			echo "Failed:"
			echo "$curl_result_body"
			;;
	esac
}

case $1 in
list)
	echo "Available devices:"
	echo "------------------"
	curl -s "$API_URL/devices" -u $API_KEY: | json devices | json -a extras.model
	;;
push)

	devices=$(curl -s "$API_URL/devices" -u $API_KEY: | json devices)
	dev_id=$(echo "$devices" | json -c "this.extras.model=='$2'" | json 0 | json id)

	case $3 in
	note)
		note_result=$(dopush $dev_id note title "$4" body "$5")
		echo "$note_result"
	;;

	address)

		curl -s "$API_URL/pushes" -u $API_KEY: -d device_id=$dev_id -d type=address -d name="$4" -d address="$5" | sed -n '2p' | cut -d'"' -f2

	;;

	list)

	 argnum=0
        for i in $@
        do
          let argnum=$argnum+1
          if [ $argnum -ge 5 ];then
            itemlist=$itemlist" -d items=$i"
          fi
        done
	curl -s $API_URL/pushes -u $API_KEY: -d device_id=$dev_id -d type=list -d title=$4 $itemlist | sed -n '2p' | cut -d'"' -f2

	;;

	file)

		curl -s "$API_URL/pushes" -u $API_KEY: -F device_id=$dev_id -F type=file -F file="@$4" -X POST #| sed -n '2p' | cut -d'"' -f2

	;;

	link)
		link_result=$(dopush $dev_id link title "$4" url "$5")
		echo "$link_result"
	;;
	esac

;;

*)
  printUsage
;;
esac

